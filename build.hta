<meta http-equiv="x-ua-compatible" content="ie=11">
<link href="src/modern-hta.css" rel="stylesheet">
<script src="src/create-log.js"></script>
<script src="src/get-sync.js"></script>
<script src="src/watch-file.js"></script>
<script src="src/modern-hta.js">

  var outputFile = 'modern-hta.js'

  var files = [
    'src/modern-hta.css',
    'https://unpkg.com/core-js-bundle/minified.js',
    'https://unpkg.com/@babel/standalone/babel.min.js',
    'https://unpkg.com/whatwg-fetch/dist/fetch.umd.js',
    'src/get-sync.js',
    'src/array-from.js',
    'src/element-closest.js',
    'src/create-log.js',
    'src/require.js',
    'src/watch-file.js',
    'src/window-props.js',
    'src/transform-babel.js',
    'src/modern-hta.js'
  ]

  var output = files.map(function (file) {
    var code = getSync(file)
    if (/\.css$/i.test(file)) {
      var css = code.trim().replace(/\r\n*/g, ' ').replace(/\s+/g, ' ').replace(/'/g, "\\'")
      //code = "document.head.insertBefore(document.createElement('style'),document.head.querySelector('link,style')).textContent = '" + css + "'"
      code = "create.call(document.head, 'style', '" + css + "')"
    }
    if (/babel/.test(file)) {
      code = code.replace('try{d({},"")}catch(e){d=function(e,t,a){return e[t]=a}}', '')
    }
    return code
  })

  write(outputFile, output.join('\n'))

  log('saved `' + outputFile + '` at ' + new Date().toISOString())

  autoClose(3)

  function autoClose (secs) {
    var el = log('')
    var i = secs
    setInterval(function () {
      el.textContent = 'Closing in ' + i
      if (i-- === 0) close()
    }, 1000)
  }

  function write (file, text) {
    var stream = new ActiveXObject('ADODB.Stream')
    stream.Open()
    stream.CharSet = 'UTF-8'
    stream.WriteText(text)
    stream.SaveToFile(file, 2)
    stream.Close()
    stream = null
  }

</script>